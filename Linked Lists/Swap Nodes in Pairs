# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def swapPairs(self, head: Optional[ListNode]) -> Optional[ListNode]:
        #not modify the values. Have to change the pointers
        dummy = ListNode(0,head)  #can give any value
        prev, curr = dummy, head
        while curr and curr.next: #have two nodes to reverse
            #save pointers
            nxtPair = curr.next.next
            second= curr.next #2
            
            #reverse the pair
            second.next = curr
            curr.next = nxtPair
            prev.next = second
            
            #update ptrs
            prev= curr
            curr= nxtPair
        
        return dummy.next
        
        
